#' Integration function
#'
#' This function allows you to integrate the 13C-NMR spectra using diferent integration regions.
#' The loaded Raw spectra can be integrated using the spinning side bands regions(default),
#' the Bonanomi("Bonanomi") regions or the Molecular Mixing Model regions("MMM").
#' The function returns the corrected, normalized and flattened spectrum
#' @param raw.spec Raw spectrum
#' @param NMRmeth Regions to be integrated.
#' Default is spinning side bands, other methods available include: Bonanomi ("Bonanomi") and Molecular mixing model ("MMM" or "MMM-SSB").
#' @keywords normalization, integration
#' @export
#' @importFrom cmna simp
#' @examples

int_nmr <- function(raw.spec, NMRmeth=NULL, SSBcorr=FALSE) {
  
  raw.spec.end <- NULL
  
  if (is.null(NMRmeth)) {
    
    raw.spec.end <- NULL
    
    for (i in 1:length(raw.spec)) {
      Integral <- NULL
      name <- raw.spec[[i]]$name
      raw.spec.end[[i]] <- raw.spec[[i]]
      spectrum <- raw.spec[[i]]$data$raw.spec
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.1 <- which(abs(spectrum[[c("ppm")]]-(-140)) == min(abs(spectrum[[c("ppm")]]-(-140))))
      Int.max.1 <- which(abs(spectrum[[c("ppm")]]-(-115)) == min(abs(spectrum[[c("ppm")]]-(-115))))
      Int.x.1 <- c(spectrum[[c("ppm")]][(Int.min.1:Int.max.1)])
      Int.y.1 <- c(spectrum[[c("raw.intensity")]][(Int.min.1:Int.max.1)])
      Integral <- append(Integral,trapz(Int.x.1,Int.y.1))
      #print(length((Int.x.1)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.2 <- which(abs(spectrum[[c("ppm")]]-(-115)) == min(abs(spectrum[[c("ppm")]]-(-115))))
      Int.max.2 <- which(abs(spectrum[[c("ppm")]]-(-95)) == min(abs(spectrum[[c("ppm")]]-(-95))))
      Int.x.2 <- c(spectrum[[c("ppm")]][(Int.min.2:Int.max.2)])
      Int.y.2 <- c(spectrum[[c("raw.intensity")]][(Int.min.2:Int.max.2)])
      Integral <- append(Integral,trapz(Int.x.2,Int.y.2))
      #print(length((Int.x.2)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.3 <- which(abs(spectrum[[c("ppm")]]-(-95)) == min(abs(spectrum[[c("ppm")]]-(-95))))
      Int.max.3 <- which(abs(spectrum[[c("ppm")]]-(-85)) == min(abs(spectrum[[c("ppm")]]-(-85))))
      Int.x.3 <- c(spectrum[[c("ppm")]][(Int.min.3:Int.max.3)])
      Int.y.3 <- c(spectrum[[c("raw.intensity")]][(Int.min.3:Int.max.3)])
      Integral <- append(Integral,trapz(Int.x.3,Int.y.3))
      #print(length((Int.x.3)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.4 <- which(abs(spectrum[[c("ppm")]]-(-85)) == min(abs(spectrum[[c("ppm")]]-(-85))))
      Int.max.4 <- which(abs(spectrum[[c("ppm")]]-(-80)) == min(abs(spectrum[[c("ppm")]]-(-80))))
      Int.x.4 <- c(spectrum[[c("ppm")]][(Int.min.4:Int.max.4)])
      Int.y.4 <- c(spectrum[[c("raw.intensity")]][(Int.min.4:Int.max.4)])
      Integral <- append(Integral,trapz(Int.x.4,Int.y.4))
      #print(length((Int.x.4)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.5 <- which(abs(spectrum[[c("ppm")]]-(-80)) == min(abs(spectrum[[c("ppm")]]-(-80))))
      Int.max.5 <- which(abs(spectrum[[c("ppm")]]-(-65)) == min(abs(spectrum[[c("ppm")]]-(-65))))
      Int.x.5 <- c(spectrum[[c("ppm")]][(Int.min.5:Int.max.5)])
      Int.y.5 <- c(spectrum[[c("raw.intensity")]][(Int.min.5:Int.max.5)])
      Integral <- append(Integral,trapz(Int.x.5,Int.y.5))
      #print(length((Int.x.5)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.6 <- which(abs(spectrum[[c("ppm")]]-(-65)) == min(abs(spectrum[[c("ppm")]]-(-65))))
      Int.max.6 <- which(abs(spectrum[[c("ppm")]]-(-45)) == min(abs(spectrum[[c("ppm")]]-(-45))))
      Int.x.6 <- c(spectrum[[c("ppm")]][(Int.min.6:Int.max.6)])
      Int.y.6 <- c(spectrum[[c("raw.intensity")]][(Int.min.6:Int.max.6)])
      Integral <- append(Integral,trapz(Int.x.6,Int.y.6))
      #print(length((Int.x.6)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.7 <- which(abs(spectrum[[c("ppm")]]-(-45)) == min(abs(spectrum[[c("ppm")]]-(-45))))
      Int.max.7 <- which(abs(spectrum[[c("ppm")]]-(-40)) == min(abs(spectrum[[c("ppm")]]-(-40))))
      Int.x.7 <- c(spectrum[[c("ppm")]][(Int.min.7:Int.max.7)])
      Int.y.7 <- c(spectrum[[c("raw.intensity")]][(Int.min.7:Int.max.7)])
      Integral <- append(Integral,trapz(Int.x.7,Int.y.7))
      #print(length((Int.x.7)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.8 <- which(abs(spectrum[[c("ppm")]]-(-40)) == min(abs(spectrum[[c("ppm")]]-(-40))))
      Int.max.8 <- which(abs(spectrum[[c("ppm")]]-(-20)) == min(abs(spectrum[[c("ppm")]]-(-20))))
      Int.x.8 <- c(spectrum[[c("ppm")]][(Int.min.8:Int.max.8)])
      Int.y.8 <- c(spectrum[[c("raw.intensity")]][(Int.min.8:Int.max.8)])
      Integral <- append(Integral,trapz(Int.x.8,Int.y.8))
      #print(length((Int.x.8)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.9 <- which(abs(spectrum[[c("ppm")]]-(-20)) == min(abs(spectrum[[c("ppm")]]-(-20))))
      Int.max.9 <- which(abs(spectrum[[c("ppm")]]-(-10)) == min(abs(spectrum[[c("ppm")]]-(-10))))
      Int.x.9 <- c(spectrum[[c("ppm")]][(Int.min.9:Int.max.9)])
      Int.y.9 <- c(spectrum[[c("raw.intensity")]][(Int.min.9:Int.max.9)])
      Integral <- append(Integral,trapz(Int.x.9,Int.y.9))
      #print(length((Int.x.9)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.10 <- which(abs(spectrum[[c("ppm")]]-(-10)) == min(abs(spectrum[[c("ppm")]]-(-10))))
      Int.max.10 <- which(abs(spectrum[[c("ppm")]]-(15)) == min(abs(spectrum[[c("ppm")]]-(15))))
      Int.x.10 <- c(spectrum[[c("ppm")]][(Int.min.10:Int.max.10)])
      Int.y.10 <- c(spectrum[[c("raw.intensity")]][(Int.min.10:Int.max.10)])
      Integral <- append(Integral,trapz(Int.x.10,Int.y.10))
      #print(length((Int.x.10)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.11 <- which(abs(spectrum[[c("ppm")]]-(15)) == min(abs(spectrum[[c("ppm")]]-(15))))
      Int.max.11 <- which(abs(spectrum[[c("ppm")]]-(35)) == min(abs(spectrum[[c("ppm")]]-(35))))
      Int.x.11 <- c(spectrum[[c("ppm")]][(Int.min.11:Int.max.11)])
      Int.y.11 <- c(spectrum[[c("raw.intensity")]][(Int.min.11:Int.max.11)])
      Integral <- append(Integral,trapz(Int.x.11,Int.y.11))
      #print(length((Int.x.11)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.12 <- which(abs(spectrum[[c("ppm")]]-(35)) == min(abs(spectrum[[c("ppm")]]-(35))))
      Int.max.12 <- which(abs(spectrum[[c("ppm")]]-(45)) == min(abs(spectrum[[c("ppm")]]-(45))))
      Int.x.12 <- c(spectrum[[c("ppm")]][(Int.min.12:Int.max.12)])
      Int.y.12 <- c(spectrum[[c("raw.intensity")]][(Int.min.12:Int.max.12)])
      Integral <- append(Integral,trapz(Int.x.12,Int.y.12))
      #print(length((Int.x.12)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.13 <- which(abs(spectrum[[c("ppm")]]-(45)) == min(abs(spectrum[[c("ppm")]]-(45))))
      Int.max.13 <- which(abs(spectrum[[c("ppm")]]-(50)) == min(abs(spectrum[[c("ppm")]]-(50))))
      Int.x.13 <- c(spectrum[[c("ppm")]][(Int.min.13:Int.max.13)])
      Int.y.13 <- c(spectrum[[c("raw.intensity")]][(Int.min.13:Int.max.13)])
      Integral <- append(Integral,trapz(Int.x.13,Int.y.13))
      #print(length((Int.x.13)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.14 <- which(abs(spectrum[[c("ppm")]]-(50)) == min(abs(spectrum[[c("ppm")]]-(50))))
      Int.max.14 <- which(abs(spectrum[[c("ppm")]]-(65)) == min(abs(spectrum[[c("ppm")]]-(65))))
      Int.x.14 <- c(spectrum[[c("ppm")]][(Int.min.14:Int.max.14)])
      Int.y.14 <- c(spectrum[[c("raw.intensity")]][(Int.min.14:Int.max.14)])
      Integral <- append(Integral,trapz(Int.x.14,Int.y.14))
      #print(length((Int.x.14)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.15 <- which(abs(spectrum[[c("ppm")]]-(65)) == min(abs(spectrum[[c("ppm")]]-(65))))
      Int.max.15 <- which(abs(spectrum[[c("ppm")]]-(85)) == min(abs(spectrum[[c("ppm")]]-(85))))
      Int.x.15 <- c(spectrum[[c("ppm")]][(Int.min.15:Int.max.15)])
      Int.y.15 <- c(spectrum[[c("raw.intensity")]][(Int.min.15:Int.max.15)])
      Integral <- append(Integral,trapz(Int.x.15,Int.y.15))
      #print(length((Int.x.15)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.16 <- which(abs(spectrum[[c("ppm")]]-(85)) == min(abs(spectrum[[c("ppm")]]-(85))))
      Int.max.16 <- which(abs(spectrum[[c("ppm")]]-(90)) == min(abs(spectrum[[c("ppm")]]-(90))))
      Int.x.16 <- c(spectrum[[c("ppm")]][(Int.min.16:Int.max.16)])
      Int.y.16 <- c(spectrum[[c("raw.intensity")]][(Int.min.16:Int.max.16)])
      Integral <- append(Integral,trapz(Int.x.16,Int.y.16))
      #print(length((Int.x.16)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.17 <- which(abs(spectrum[[c("ppm")]]-(90)) == min(abs(spectrum[[c("ppm")]]-(90))))
      Int.max.17 <- which(abs(spectrum[[c("ppm")]]-(110)) == min(abs(spectrum[[c("ppm")]]-(110))))
      Int.x.17 <- c(spectrum[[c("ppm")]][(Int.min.17:Int.max.17)])
      Int.y.17 <- c(spectrum[[c("raw.intensity")]][(Int.min.17:Int.max.17)])
      Integral <- append(Integral,trapz(Int.x.17,Int.y.17))
      #print(length((Int.x.17)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.18 <- which(abs(spectrum[[c("ppm")]]-(110)) == min(abs(spectrum[[c("ppm")]]-(110))))
      Int.max.18 <- which(abs(spectrum[[c("ppm")]]-(120)) == min(abs(spectrum[[c("ppm")]]-(120))))
      Int.x.18 <- c(spectrum[[c("ppm")]][(Int.min.18:Int.max.18)])
      Int.y.18 <- c(spectrum[[c("raw.intensity")]][(Int.min.18:Int.max.18)])
      Integral <- append(Integral,trapz(Int.x.18,Int.y.18))
      #print(length((Int.x.18)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.19 <- which(abs(spectrum[[c("ppm")]]-(120)) == min(abs(spectrum[[c("ppm")]]-(120))))
      Int.max.19 <- which(abs(spectrum[[c("ppm")]]-(145)) == min(abs(spectrum[[c("ppm")]]-(145))))
      Int.x.19 <- c(spectrum[[c("ppm")]][(Int.min.19:Int.max.19)])
      Int.y.19 <- c(spectrum[[c("raw.intensity")]][(Int.min.19:Int.max.19)])
      Integral <- append(Integral,trapz(Int.x.19,Int.y.19))
      #print(length((Int.x.19)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.20 <- which(abs(spectrum[[c("ppm")]]-(145)) == min(abs(spectrum[[c("ppm")]]-(145))))
      Int.max.20 <- which(abs(spectrum[[c("ppm")]]-(165)) == min(abs(spectrum[[c("ppm")]]-(165))))
      Int.x.20 <- c(spectrum[[c("ppm")]][(Int.min.20:Int.max.20)])
      Int.y.20 <- c(spectrum[[c("raw.intensity")]][(Int.min.20:Int.max.20)])
      Integral <- append(Integral,trapz(Int.x.20,Int.y.20))
      #print(length((Int.x.20)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.21 <- which(abs(spectrum[[c("ppm")]]-(165)) == min(abs(spectrum[[c("ppm")]]-(165))))
      Int.max.21 <- which(abs(spectrum[[c("ppm")]]-(175)) == min(abs(spectrum[[c("ppm")]]-(175))))
      Int.x.21 <- c(spectrum[[c("ppm")]][(Int.min.21:Int.max.21)])
      Int.y.21 <- c(spectrum[[c("raw.intensity")]][(Int.min.21:Int.max.21)])
      Integral <- append(Integral,trapz(Int.x.21,Int.y.21))
      #print(length((Int.x.21)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.22 <- which(abs(spectrum[[c("ppm")]]-(175)) == min(abs(spectrum[[c("ppm")]]-(175))))
      Int.max.22 <- which(abs(spectrum[[c("ppm")]]-(180)) == min(abs(spectrum[[c("ppm")]]-(180))))
      Int.x.22 <- c(spectrum[[c("ppm")]][(Int.min.22:Int.max.22)])
      Int.y.22<- c(spectrum[[c("raw.intensity")]][(Int.min.22:Int.max.22)])
      Integral <- append(Integral,trapz(Int.x.22,Int.y.22))
      #print(length((Int.x.22)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.23 <- which(abs(spectrum[[c("ppm")]]-(180)) == min(abs(spectrum[[c("ppm")]]-(180))))
      Int.max.23 <- which(abs(spectrum[[c("ppm")]]-(195)) == min(abs(spectrum[[c("ppm")]]-(195))))
      Int.x.23 <- c(spectrum[[c("ppm")]][(Int.min.23:Int.max.23)])
      Int.y.23 <- c(spectrum[[c("raw.intensity")]][(Int.min.23:Int.max.23)])
      Integral <- append(Integral,trapz(Int.x.23,Int.y.23))
      #print(length((Int.x.23)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.24 <- which(abs(spectrum[[c("ppm")]]-(195)) == min(abs(spectrum[[c("ppm")]]-(195))))
      Int.max.24 <- which(abs(spectrum[[c("ppm")]]-(215)) == min(abs(spectrum[[c("ppm")]]-(215))))
      Int.x.24 <- c(spectrum[[c("ppm")]][(Int.min.24:Int.max.24)])
      Int.y.24 <- c(spectrum[[c("raw.intensity")]][(Int.min.24:Int.max.24)])
      Integral <- append(Integral,trapz(Int.x.24,Int.y.24))
      #print(length((Int.x.24)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.25 <- which(abs(spectrum[[c("ppm")]]-(215)) == min(abs(spectrum[[c("ppm")]]-(215))))
      Int.max.25 <- which(abs(spectrum[[c("ppm")]]-(220)) == min(abs(spectrum[[c("ppm")]]-(220))))
      Int.x.25 <- c(spectrum[[c("ppm")]][(Int.min.25:Int.max.25)])
      Int.y.25 <- c(spectrum[[c("raw.intensity")]][(Int.min.25:Int.max.25)])
      Integral <- append(Integral,trapz(Int.x.25,Int.y.25))
      #print(length((Int.x.25)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.26 <- which(abs(spectrum[[c("ppm")]]-(220)) == min(abs(spectrum[[c("ppm")]]-(220))))
      Int.max.26 <- which(abs(spectrum[[c("ppm")]]-(240)) == min(abs(spectrum[[c("ppm")]]-(240))))
      Int.x.26 <- c(spectrum[[c("ppm")]][(Int.min.26:Int.max.26)])
      Int.y.26 <- c(spectrum[[c("raw.intensity")]][(Int.min.26:Int.max.26)])
      Integral <- append(Integral,trapz(Int.x.26,Int.y.26))
      #print(length((Int.x.26)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.27 <- which(abs(spectrum[[c("ppm")]]-(240)) == min(abs(spectrum[[c("ppm")]]-(240))))
      Int.max.27 <- which(abs(spectrum[[c("ppm")]]-(250)) == min(abs(spectrum[[c("ppm")]]-(250))))
      Int.x.27 <- c(spectrum[[c("ppm")]][(Int.min.27:Int.max.27)])
      Int.y.27 <- c(spectrum[[c("raw.intensity")]][(Int.min.27:Int.max.27)])
      Integral <- append(Integral,trapz(Int.x.27,Int.y.27))
      #print(length((Int.x.27)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.28 <- which(abs(spectrum[[c("ppm")]]-(250)) == min(abs(spectrum[[c("ppm")]]-(250))))
      Int.max.28 <- which(abs(spectrum[[c("ppm")]]-(275)) == min(abs(spectrum[[c("ppm")]]-(275))))
      Int.x.28 <- c(spectrum[[c("ppm")]][(Int.min.28:Int.max.28)])
      Int.y.28 <- c(spectrum[[c("raw.intensity")]][(Int.min.28:Int.max.28)])
      Integral <- append(Integral,trapz(Int.x.28,Int.y.28))
      #print(length((Int.x.28)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.29 <- which(abs(spectrum[[c("ppm")]]-(275)) == min(abs(spectrum[[c("ppm")]]-(275))))
      Int.max.29 <- which(abs(spectrum[[c("ppm")]]-(295)) == min(abs(spectrum[[c("ppm")]]-(295))))
      Int.x.29 <- c(spectrum[[c("ppm")]][(Int.min.29:Int.max.29)])
      Int.y.29 <- c(spectrum[[c("raw.intensity")]][(Int.min.29:Int.max.29)])
      Integral <- append(Integral,trapz(Int.x.29,Int.y.29))
      #print(length((Int.x.29)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.30 <- which(abs(spectrum[[c("ppm")]]-(295)) == min(abs(spectrum[[c("ppm")]]-(295))))
      Int.max.30 <- which(abs(spectrum[[c("ppm")]]-(305)) == min(abs(spectrum[[c("ppm")]]-(305))))
      Int.x.30 <- c(spectrum[[c("ppm")]][(Int.min.30:Int.max.30)])
      Int.y.30 <- c(spectrum[[c("raw.intensity")]][(Int.min.30:Int.max.30)])
      Integral <- append(Integral,trapz(Int.x.30,Int.y.30))
      #print(length((Int.x.30)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.31 <- which(abs(spectrum[[c("ppm")]]-(305)) == min(abs(spectrum[[c("ppm")]]-(305))))
      Int.max.31 <- which(abs(spectrum[[c("ppm")]]-(310)) == min(abs(spectrum[[c("ppm")]]-(310))))
      Int.x.31 <- c(spectrum[[c("ppm")]][(Int.min.31:Int.max.31)])
      Int.y.31 <- c(spectrum[[c("raw.intensity")]][(Int.min.31:Int.max.31)])
      Integral <- append(Integral,trapz(Int.x.31,Int.y.31))
      #print(length((Int.x.31)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.32 <- which(abs(spectrum[[c("ppm")]]-(310)) == min(abs(spectrum[[c("ppm")]]-(310))))
      Int.max.32 <- which(abs(spectrum[[c("ppm")]]-(325)) == min(abs(spectrum[[c("ppm")]]-(325))))
      Int.x.32 <- c(spectrum[[c("ppm")]][(Int.min.32:Int.max.32)])
      Int.y.32 <- c(spectrum[[c("raw.intensity")]][(Int.min.32:Int.max.32)])
      Integral <- append(Integral,trapz(Int.x.32,Int.y.32))
      #print(length((Int.x.32)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.33 <- which(abs(spectrum[[c("ppm")]]-(325)) == min(abs(spectrum[[c("ppm")]]-(325))))
      Int.max.33 <- which(abs(spectrum[[c("ppm")]]-(345)) == min(abs(spectrum[[c("ppm")]]-(345))))
      Int.x.33 <- c(spectrum[[c("ppm")]][(Int.min.33:Int.max.33)])
      Int.y.33 <- c(spectrum[[c("raw.intensity")]][(Int.min.33:Int.max.33)])
      Integral <- append(Integral,trapz(Int.x.33,Int.y.33))
      #print(length((Int.x.33)))
      
      norm <- sum(Integral[1:33])
      normalized.Int <- (Integral/norm)*100
      Integral <- data.frame(normalized.Int)
      raw.spec.end[[i]] <- list("name" = name, "data" = list("raw.spec" = spectrum,"Integral" = Integral))
    }
  }  else if (NMRmeth == "MMM-SSB") {
    
    raw.spec.end <- NULL
    
    for (i in 1:length(raw.spec)) {
      Integral <- NULL
      name <- raw.spec[[i]]$name
      raw.spec.end[[i]] <- raw.spec[[i]]
      spectrum <- raw.spec[[i]]$data$raw.spec
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.1 <- which(abs(spectrum[[c("ppm")]]-(-140)) == min(abs(spectrum[[c("ppm")]]-(-140))))
      Int.max.1 <- which(abs(spectrum[[c("ppm")]]-(-115)) == min(abs(spectrum[[c("ppm")]]-(-115))))
      Int.x.1 <- c(spectrum[[c("ppm")]][(Int.min.1:Int.max.1)])
      Int.y.1 <- c(spectrum[[c("raw.intensity")]][(Int.min.1:Int.max.1)])
      Integral <- append(Integral,trapz(Int.x.1,Int.y.1))
      #print(length((Int.x.1)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.2 <- which(abs(spectrum[[c("ppm")]]-(-115)) == min(abs(spectrum[[c("ppm")]]-(-115))))
      Int.max.2 <- which(abs(spectrum[[c("ppm")]]-(-95)) == min(abs(spectrum[[c("ppm")]]-(-95))))
      Int.x.2 <- c(spectrum[[c("ppm")]][(Int.min.2:Int.max.2)])
      Int.y.2 <- c(spectrum[[c("raw.intensity")]][(Int.min.2:Int.max.2)])
      Integral <- append(Integral,trapz(Int.x.2,Int.y.2))
      #print(length((Int.x.2)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.3 <- which(abs(spectrum[[c("ppm")]]-(-95)) == min(abs(spectrum[[c("ppm")]]-(-95))))
      Int.max.3 <- which(abs(spectrum[[c("ppm")]]-(-85)) == min(abs(spectrum[[c("ppm")]]-(-85))))
      Int.x.3 <- c(spectrum[[c("ppm")]][(Int.min.3:Int.max.3)])
      Int.y.3 <- c(spectrum[[c("raw.intensity")]][(Int.min.3:Int.max.3)])
      Integral <- append(Integral,trapz(Int.x.3,Int.y.3))
      #print(length((Int.x.3)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.4 <- which(abs(spectrum[[c("ppm")]]-(-85)) == min(abs(spectrum[[c("ppm")]]-(-85))))
      Int.max.4 <- which(abs(spectrum[[c("ppm")]]-(-80)) == min(abs(spectrum[[c("ppm")]]-(-80))))
      Int.x.4 <- c(spectrum[[c("ppm")]][(Int.min.4:Int.max.4)])
      Int.y.4 <- c(spectrum[[c("raw.intensity")]][(Int.min.4:Int.max.4)])
      Integral <- append(Integral,trapz(Int.x.4,Int.y.4))
      #print(length((Int.x.4)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.5 <- which(abs(spectrum[[c("ppm")]]-(-80)) == min(abs(spectrum[[c("ppm")]]-(-80))))
      Int.max.5 <- which(abs(spectrum[[c("ppm")]]-(-65)) == min(abs(spectrum[[c("ppm")]]-(-65))))
      Int.x.5 <- c(spectrum[[c("ppm")]][(Int.min.5:Int.max.5)])
      Int.y.5 <- c(spectrum[[c("raw.intensity")]][(Int.min.5:Int.max.5)])
      Integral <- append(Integral,trapz(Int.x.5,Int.y.5))
      #print(length((Int.x.5)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.6 <- which(abs(spectrum[[c("ppm")]]-(-65)) == min(abs(spectrum[[c("ppm")]]-(-65))))
      Int.max.6 <- which(abs(spectrum[[c("ppm")]]-(-45)) == min(abs(spectrum[[c("ppm")]]-(-45))))
      Int.x.6 <- c(spectrum[[c("ppm")]][(Int.min.6:Int.max.6)])
      Int.y.6 <- c(spectrum[[c("raw.intensity")]][(Int.min.6:Int.max.6)])
      Integral <- append(Integral,trapz(Int.x.5,Int.y.5))
      #print(length((Int.x.6)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.7 <- which(abs(spectrum[[c("ppm")]]-(-45)) == min(abs(spectrum[[c("ppm")]]-(-45))))
      Int.max.7 <- which(abs(spectrum[[c("ppm")]]-(-40)) == min(abs(spectrum[[c("ppm")]]-(-40))))
      Int.x.7 <- c(spectrum[[c("ppm")]][(Int.min.7:Int.max.7)])
      Int.y.7 <- c(spectrum[[c("raw.intensity")]][(Int.min.7:Int.max.7)])
      Integral <- append(Integral,trapz(Int.x.7,Int.y.7))
      #print(length((Int.x.7)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.8 <- which(abs(spectrum[[c("ppm")]]-(-40)) == min(abs(spectrum[[c("ppm")]]-(-40))))
      Int.max.8 <- which(abs(spectrum[[c("ppm")]]-(-20)) == min(abs(spectrum[[c("ppm")]]-(-20))))
      Int.x.8 <- c(spectrum[[c("ppm")]][(Int.min.8:Int.max.8)])
      Int.y.8 <- c(spectrum[[c("raw.intensity")]][(Int.min.8:Int.max.8)])
      Integral <- append(Integral,trapz(Int.x.8,Int.y.8))
      #print(length((Int.x.8)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.9 <- which(abs(spectrum[[c("ppm")]]-(-20)) == min(abs(spectrum[[c("ppm")]]-(-20))))
      Int.max.9 <- which(abs(spectrum[[c("ppm")]]-(-10)) == min(abs(spectrum[[c("ppm")]]-(-10))))
      Int.x.9 <- c(spectrum[[c("ppm")]][(Int.min.9:Int.max.9)])
      Int.y.9 <- c(spectrum[[c("raw.intensity")]][(Int.min.9:Int.max.9)])
      Integral <- append(Integral,trapz(Int.x.9,Int.y.9))
      #print(length((Int.x.9)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.10 <- which(abs(spectrum[[c("ppm")]]-(-10)) == min(abs(spectrum[[c("ppm")]]-(-10))))
      Int.max.10 <- which(abs(spectrum[[c("ppm")]]-(15)) == min(abs(spectrum[[c("ppm")]]-(15))))
      Int.x.10 <- c(spectrum[[c("ppm")]][(Int.min.10:Int.max.10)])
      Int.y.10 <- c(spectrum[[c("raw.intensity")]][(Int.min.10:Int.max.10)])
      Integral <- append(Integral,trapz(Int.x.10,Int.y.10))
      #print(length((Int.x.10)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.11 <- which(abs(spectrum[[c("ppm")]]-(15)) == min(abs(spectrum[[c("ppm")]]-(15))))
      Int.max.11 <- which(abs(spectrum[[c("ppm")]]-(35)) == min(abs(spectrum[[c("ppm")]]-(35))))
      Int.x.11 <- c(spectrum[[c("ppm")]][(Int.min.11:Int.max.11)])
      Int.y.11 <- c(spectrum[[c("raw.intensity")]][(Int.min.11:Int.max.11)])
      Integral <- append(Integral,trapz(Int.x.11,Int.y.11))
      #print(length((Int.x.11)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.12 <- which(abs(spectrum[[c("ppm")]]-(35)) == min(abs(spectrum[[c("ppm")]]-(35))))
      Int.max.12 <- which(abs(spectrum[[c("ppm")]]-(45)) == min(abs(spectrum[[c("ppm")]]-(45))))
      Int.x.12 <- c(spectrum[[c("ppm")]][(Int.min.12:Int.max.12)])
      Int.y.12 <- c(spectrum[[c("raw.intensity")]][(Int.min.12:Int.max.12)])
      Integral <- append(Integral,trapz(Int.x.12,Int.y.12))
      #print(length((Int.x.12)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.13 <- which(abs(spectrum[[c("ppm")]]-(45)) == min(abs(spectrum[[c("ppm")]]-(45))))
      Int.max.13 <- which(abs(spectrum[[c("ppm")]]-(50)) == min(abs(spectrum[[c("ppm")]]-(50))))
      Int.x.13 <- c(spectrum[[c("ppm")]][(Int.min.13:Int.max.13)])
      Int.y.13 <- c(spectrum[[c("raw.intensity")]][(Int.min.13:Int.max.13)])
      Integral <- append(Integral,trapz(Int.x.13,Int.y.13))
      #print(length((Int.x.13)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.14 <- which(abs(spectrum[[c("ppm")]]-(50)) == min(abs(spectrum[[c("ppm")]]-(50))))
      Int.max.14 <- which(abs(spectrum[[c("ppm")]]-(65)) == min(abs(spectrum[[c("ppm")]]-(65))))
      Int.x.14 <- c(spectrum[[c("ppm")]][(Int.min.14:Int.max.14)])
      Int.y.14 <- c(spectrum[[c("raw.intensity")]][(Int.min.14:Int.max.14)])
      Integral <- append(Integral,trapz(Int.x.14,Int.y.14))
      #print(length((Int.x.14)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.15 <- which(abs(spectrum[[c("ppm")]]-(65)) == min(abs(spectrum[[c("ppm")]]-(65))))
      Int.max.15 <- which(abs(spectrum[[c("ppm")]]-(85)) == min(abs(spectrum[[c("ppm")]]-(85))))
      Int.x.15 <- c(spectrum[[c("ppm")]][(Int.min.15:Int.max.15)])
      Int.y.15 <- c(spectrum[[c("raw.intensity")]][(Int.min.15:Int.max.15)])
      Integral <- append(Integral,trapz(Int.x.15,Int.y.15))
      #print(length((Int.x.15)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.16 <- which(abs(spectrum[[c("ppm")]]-(85)) == min(abs(spectrum[[c("ppm")]]-(85))))
      Int.max.16 <- which(abs(spectrum[[c("ppm")]]-(90)) == min(abs(spectrum[[c("ppm")]]-(90))))
      Int.x.16 <- c(spectrum[[c("ppm")]][(Int.min.16:Int.max.16)])
      Int.y.16 <- c(spectrum[[c("raw.intensity")]][(Int.min.16:Int.max.16)])
      Integral <- append(Integral,trapz(Int.x.16,Int.y.16))
      #print(length((Int.x.16)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.17 <- which(abs(spectrum[[c("ppm")]]-(90)) == min(abs(spectrum[[c("ppm")]]-(90))))
      Int.max.17 <- which(abs(spectrum[[c("ppm")]]-(110)) == min(abs(spectrum[[c("ppm")]]-(110))))
      Int.x.17 <- c(spectrum[[c("ppm")]][(Int.min.17:Int.max.17)])
      Int.y.17 <- c(spectrum[[c("raw.intensity")]][(Int.min.17:Int.max.17)])
      Integral <- append(Integral,trapz(Int.x.17,Int.y.17))
      #print(length((Int.x.17)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.18 <- which(abs(spectrum[[c("ppm")]]-(110)) == min(abs(spectrum[[c("ppm")]]-(110))))
      Int.max.18 <- which(abs(spectrum[[c("ppm")]]-(120)) == min(abs(spectrum[[c("ppm")]]-(120))))
      Int.x.18 <- c(spectrum[[c("ppm")]][(Int.min.18:Int.max.18)])
      Int.y.18 <- c(spectrum[[c("raw.intensity")]][(Int.min.18:Int.max.18)])
      Integral <- append(Integral,trapz(Int.x.18,Int.y.18))
      #print(length((Int.x.18)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.19 <- which(abs(spectrum[[c("ppm")]]-(120)) == min(abs(spectrum[[c("ppm")]]-(120))))
      Int.max.19 <- which(abs(spectrum[[c("ppm")]]-(145)) == min(abs(spectrum[[c("ppm")]]-(145))))
      Int.x.19 <- c(spectrum[[c("ppm")]][(Int.min.19:Int.max.19)])
      Int.y.19 <- c(spectrum[[c("raw.intensity")]][(Int.min.19:Int.max.19)])
      Integral <- append(Integral,trapz(Int.x.19,Int.y.19))
      #print(length((Int.x.19)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.20 <- which(abs(spectrum[[c("ppm")]]-(145)) == min(abs(spectrum[[c("ppm")]]-(145))))
      Int.max.20 <- which(abs(spectrum[[c("ppm")]]-(165)) == min(abs(spectrum[[c("ppm")]]-(165))))
      Int.x.20 <- c(spectrum[[c("ppm")]][(Int.min.20:Int.max.20)])
      Int.y.20 <- c(spectrum[[c("raw.intensity")]][(Int.min.20:Int.max.20)])
      Integral <- append(Integral,trapz(Int.x.20,Int.y.20))
      #print(length((Int.x.20)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.21 <- which(abs(spectrum[[c("ppm")]]-(165)) == min(abs(spectrum[[c("ppm")]]-(165))))
      Int.max.21 <- which(abs(spectrum[[c("ppm")]]-(175)) == min(abs(spectrum[[c("ppm")]]-(175))))
      Int.x.21 <- c(spectrum[[c("ppm")]][(Int.min.21:Int.max.21)])
      Int.y.21 <- c(spectrum[[c("raw.intensity")]][(Int.min.21:Int.max.21)])
      Integral <- append(Integral,trapz(Int.x.21,Int.y.21))
      #print(length((Int.x.21)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.22 <- which(abs(spectrum[[c("ppm")]]-(175)) == min(abs(spectrum[[c("ppm")]]-(175))))
      Int.max.22 <- which(abs(spectrum[[c("ppm")]]-(180)) == min(abs(spectrum[[c("ppm")]]-(180))))
      Int.x.22 <- c(spectrum[[c("ppm")]][(Int.min.22:Int.max.22)])
      Int.y.22<- c(spectrum[[c("raw.intensity")]][(Int.min.22:Int.max.22)])
      Integral <- append(Integral,trapz(Int.x.22,Int.y.22))
      #print(length((Int.x.22)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.23 <- which(abs(spectrum[[c("ppm")]]-(180)) == min(abs(spectrum[[c("ppm")]]-(180))))
      Int.max.23 <- which(abs(spectrum[[c("ppm")]]-(195)) == min(abs(spectrum[[c("ppm")]]-(195))))
      Int.x.23 <- c(spectrum[[c("ppm")]][(Int.min.23:Int.max.23)])
      Int.y.23 <- c(spectrum[[c("raw.intensity")]][(Int.min.23:Int.max.23)])
      Integral <- append(Integral,trapz(Int.x.23,Int.y.23))
      #print(length((Int.x.23)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.24 <- which(abs(spectrum[[c("ppm")]]-(195)) == min(abs(spectrum[[c("ppm")]]-(195))))
      Int.max.24 <- which(abs(spectrum[[c("ppm")]]-(215)) == min(abs(spectrum[[c("ppm")]]-(215))))
      Int.x.24 <- c(spectrum[[c("ppm")]][(Int.min.24:Int.max.24)])
      Int.y.24 <- c(spectrum[[c("raw.intensity")]][(Int.min.24:Int.max.24)])
      Integral <- append(Integral,trapz(Int.x.24,Int.y.24))
      #print(length((Int.x.24)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.25 <- which(abs(spectrum[[c("ppm")]]-(215)) == min(abs(spectrum[[c("ppm")]]-(215))))
      Int.max.25 <- which(abs(spectrum[[c("ppm")]]-(220)) == min(abs(spectrum[[c("ppm")]]-(220))))
      Int.x.25 <- c(spectrum[[c("ppm")]][(Int.min.25:Int.max.25)])
      Int.y.25 <- c(spectrum[[c("raw.intensity")]][(Int.min.25:Int.max.25)])
      Integral <- append(Integral,trapz(Int.x.25,Int.y.25))
      #print(length((Int.x.25)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.26 <- which(abs(spectrum[[c("ppm")]]-(220)) == min(abs(spectrum[[c("ppm")]]-(220))))
      Int.max.26 <- which(abs(spectrum[[c("ppm")]]-(240)) == min(abs(spectrum[[c("ppm")]]-(240))))
      Int.x.26 <- c(spectrum[[c("ppm")]][(Int.min.26:Int.max.26)])
      Int.y.26 <- c(spectrum[[c("raw.intensity")]][(Int.min.26:Int.max.26)])
      Integral <- append(Integral,trapz(Int.x.26,Int.y.26))
      #print(length((Int.x.26)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.27 <- which(abs(spectrum[[c("ppm")]]-(240)) == min(abs(spectrum[[c("ppm")]]-(240))))
      Int.max.27 <- which(abs(spectrum[[c("ppm")]]-(250)) == min(abs(spectrum[[c("ppm")]]-(250))))
      Int.x.27 <- c(spectrum[[c("ppm")]][(Int.min.27:Int.max.27)])
      Int.y.27 <- c(spectrum[[c("raw.intensity")]][(Int.min.27:Int.max.27)])
      Integral <- append(Integral,trapz(Int.x.27,Int.y.27))
      #print(length((Int.x.27)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.28 <- which(abs(spectrum[[c("ppm")]]-(250)) == min(abs(spectrum[[c("ppm")]]-(250))))
      Int.max.28 <- which(abs(spectrum[[c("ppm")]]-(275)) == min(abs(spectrum[[c("ppm")]]-(275))))
      Int.x.28 <- c(spectrum[[c("ppm")]][(Int.min.28:Int.max.28)])
      Int.y.28 <- c(spectrum[[c("raw.intensity")]][(Int.min.28:Int.max.28)])
      Integral <- append(Integral,trapz(Int.x.28,Int.y.28))
      #print(length((Int.x.28)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.29 <- which(abs(spectrum[[c("ppm")]]-(275)) == min(abs(spectrum[[c("ppm")]]-(275))))
      Int.max.29 <- which(abs(spectrum[[c("ppm")]]-(295)) == min(abs(spectrum[[c("ppm")]]-(295))))
      Int.x.29 <- c(spectrum[[c("ppm")]][(Int.min.29:Int.max.29)])
      Int.y.29 <- c(spectrum[[c("raw.intensity")]][(Int.min.29:Int.max.29)])
      Integral <- append(Integral,trapz(Int.x.29,Int.y.29))
      #print(length((Int.x.29)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.30 <- which(abs(spectrum[[c("ppm")]]-(295)) == min(abs(spectrum[[c("ppm")]]-(295))))
      Int.max.30 <- which(abs(spectrum[[c("ppm")]]-(305)) == min(abs(spectrum[[c("ppm")]]-(305))))
      Int.x.30 <- c(spectrum[[c("ppm")]][(Int.min.30:Int.max.30)])
      Int.y.30 <- c(spectrum[[c("raw.intensity")]][(Int.min.30:Int.max.30)])
      Integral <- append(Integral,trapz(Int.x.30,Int.y.30))
      #print(length((Int.x.30)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.31 <- which(abs(spectrum[[c("ppm")]]-(305)) == min(abs(spectrum[[c("ppm")]]-(305))))
      Int.max.31 <- which(abs(spectrum[[c("ppm")]]-(310)) == min(abs(spectrum[[c("ppm")]]-(310))))
      Int.x.31 <- c(spectrum[[c("ppm")]][(Int.min.31:Int.max.31)])
      Int.y.31 <- c(spectrum[[c("raw.intensity")]][(Int.min.31:Int.max.31)])
      Integral <- append(Integral,trapz(Int.x.31,Int.y.31))
      #print(length((Int.x.31)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.32 <- which(abs(spectrum[[c("ppm")]]-(310)) == min(abs(spectrum[[c("ppm")]]-(310))))
      Int.max.32 <- which(abs(spectrum[[c("ppm")]]-(325)) == min(abs(spectrum[[c("ppm")]]-(325))))
      Int.x.32 <- c(spectrum[[c("ppm")]][(Int.min.32:Int.max.32)])
      Int.y.32 <- c(spectrum[[c("raw.intensity")]][(Int.min.32:Int.max.32)])
      Integral <- append(Integral,trapz(Int.x.32,Int.y.32))
      #print(length((Int.x.32)))
      
      ## Extract ppm (x) and the intesity (y) for predifined intervals
      Int.min.33 <- which(abs(spectrum[[c("ppm")]]-(325)) == min(abs(spectrum[[c("ppm")]]-(325))))
      Int.max.33 <- which(abs(spectrum[[c("ppm")]]-(345)) == min(abs(spectrum[[c("ppm")]]-(345))))
      Int.x.33 <- c(spectrum[[c("ppm")]][(Int.min.33:Int.max.33)])
      Int.y.33 <- c(spectrum[[c("raw.intensity")]][(Int.min.33:Int.max.33)])
      Integral <- append(Integral,trapz(Int.x.33,Int.y.33))
      #print(length((Int.x.33)))
      
      norm <- sum(Integral[1:33])
      normalized.Int <- (Integral/norm)*100
      Integral <- data.frame(normalized.Int)
      
      if (SSBcorr == TRUE) {
        
        ##Alklyl C calculation
        Alkyl <-  setNames(data.frame(sum(2*sum(Integral[1:3,1]), sum(Integral[10:12,1]), -sum(Integral[28:30,1]))), c("Alkyl"))
        
        ##N_Alkyl_Methoxyl C calculation
        N_Alkyl_Methoxyl <-  setNames(data.frame(sum(2*sum(Integral[4:5,1]), sum(Integral[13:14,1]), -sum(Integral[31:32,1]))), c("N_Alkyl_Methoxyl"))
        
        ##O-Alkyl C calculation
        O_Alkyl <-  setNames(data.frame(sum(2*sum(Integral[6:7,1]), sum(Integral[15:16,1]), -sum(Integral[33:33,1]))), c("O-Alkyl"))
        
        ##Di_O_Alkyl C calculation
        Di_O_Alkyl <-  setNames(data.frame(sum(2*sum(Integral[8:8,1]), sum(Integral[17:17,1]))), c("Di_O_Alkyl"))
        
        ##Aromatic C calculation
        Aromatic <-  setNames(data.frame(sum(2*sum(Integral[27:28,1]), sum(Integral[18:19,1]), -sum(Integral[1:1,1]))), c("Aromatic"))
        
        ##Phenolic C calculation
        Phenolic <-  setNames(data.frame(sum(2*sum(Integral[29:29,1]), sum(Integral[20:20,1]), -sum(Integral[2:2,1]))), c("Phenolic"))
        
        ##Amide_Carboxylic C calculation
        Amide_Carboxylic <-  setNames(data.frame(sum(2*sum(Integral[30:32,1]), sum(Integral[21:23,1]), -sum(Integral[3:5,1]))), c("Amide_Carboxylic"))
        
        ##Ketone C calculation
        Ketone <-  setNames(data.frame(sum(2*sum(Integral[33:33,1]), sum(Integral[24:24,1]), -sum(Integral[6:6,1]))), c("Ketone"))
        
        ##Put all together
        Amide_to_Ketone <- c(Amide_Carboxylic + Ketone)
        
        sampleintegralend <- data.frame(Alkyl, N_Alkyl_Methoxyl, O_Alkyl, Di_O_Alkyl, Aromatic, Phenolic, Amide_to_Ketone)
        
        sampleintegralend <- t(sampleintegralend)
        
        norm <- sum(sampleintegralend)
        normalized.Int <- (sampleintegralend/norm)*100
        sampleintegralend <- data.frame(normalized.Int)
        
        raw.spec.end[[i]] <- list("name" = name, "data" = list("raw.spec" = spectrum,"Integral" = sampleintegralend))
        
      } else if (SSBcorr == FALSE) {
        raw.spec.end[[i]] <- list("name" = name, "data" = list("raw.spec" = spectrum, "Integral" = Integral))
      }
    }
    
  }
  return(raw.spec.end)
}
